{
    "swagger": "2.0",
    "info": {
        "title": "Payment Method",
        "description": "TMF670 Defines a specific method of payment (e.g. direct debit with all details associated)\n-\tMain payment method attributes are its type, details, name, description, isPreffered, status, status date\nPayment Method API performs the following operations on payment method.\n-\tRetrieval of a payment method or a collection of payment method depending on filter criteria\n-\tPartial update of a payment method\n-\tCreation of a payment method \n-\tNotification of events on payment method:\no\tPayment method state change\no\tPayment method change\no\tPayment method created\no\tPayment method deleted \n\n\\n\\n\\nCopyright \u00a9 TM Forum 2020. All Rights Reserved\\n\\n\\n\"\n",
        "version": "4.0.0"
    },
    "host": "serverRoot",
    "basePath": "/tmf-api/paymentMethod/v4/",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json;charset=utf-8"
    ],
    "produces": [
        "application/json;charset=utf-8"
    ],
    "tags": [
        {
            "name": "paymentMethod"
        },
        {
            "name": "notification listeners (client side)"
        },
        {
            "name": "events subscription"
        }
    ],
    "paths": {
        "/paymentMethod": {
            "get": {
                "operationId": "listPaymentMethod",
                "summary": "List or find PaymentMethod objects",
                "description": "This operation list or find PaymentMethod entities",
                "tags": [
                    "paymentMethod"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "offset",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PaymentMethod"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "operationId": "createPaymentMethod",
                "summary": "Creates a PaymentMethod",
                "description": "This operation creates a PaymentMethod entity.",
                "tags": [
                    "paymentMethod"
                ],
                "parameters": [
                    {
                        "name": "paymentMethod",
                        "description": "The PaymentMethod to be created",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod_Create"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/paymentMethod/{id}": {
            "get": {
                "operationId": "retrievePaymentMethod",
                "summary": "Retrieves a PaymentMethod by ID",
                "description": "This operation retrieves a PaymentMethod entity. Attribute selection is enabled for all first level attributes.",
                "tags": [
                    "paymentMethod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the PaymentMethod",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "fields",
                        "description": "Comma-separated properties to provide in response",
                        "required": false,
                        "type": "string",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "patch": {
                "operationId": "patchPaymentMethod",
                "summary": "Updates partially a PaymentMethod",
                "description": "This operation updates partially a PaymentMethod entity.",
                "tags": [
                    "paymentMethod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the PaymentMethod",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    },
                    {
                        "name": "paymentMethod",
                        "description": "The PaymentMethod to be updated",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod_Update"
                        },
                        "in": "body"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "operationId": "deletePaymentMethod",
                "summary": "Deletes a PaymentMethod",
                "description": "This operation deletes a PaymentMethod entity.",
                "tags": [
                    "paymentMethod"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "description": "Identifier of the PaymentMethod",
                        "required": true,
                        "type": "string",
                        "in": "path"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub": {
            "post": {
                "operationId": "registerListener",
                "summary": "Register a listener",
                "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "schema": {
                            "$ref": "#/definitions/EventSubscriptionInput"
                        },
                        "required": true,
                        "in": "body",
                        "description": "Data containing the callback endpoint to deliver the information"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscribed",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/hub/{id}": {
            "delete": {
                "operationId": "unregisterListener",
                "summary": "Unregister a listener",
                "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
                "tags": [
                    "events subscription"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "type": "string",
                        "required": true,
                        "in": "path",
                        "description": "The id of the registered listener"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/paymentMethodCreateEvent": {
            "post": {
                "operationId": "listenToPaymentMethodCreateEvent",
                "summary": "Client listener for entity PaymentMethodCreateEvent",
                "description": "Example of a client listener for receiving the notification PaymentMethodCreateEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodCreateEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/paymentMethodAttributeValueChangeEvent": {
            "post": {
                "operationId": "listenToPaymentMethodAttributeValueChangeEvent",
                "summary": "Client listener for entity PaymentMethodAttributeValueChangeEvent",
                "description": "Example of a client listener for receiving the notification PaymentMethodAttributeValueChangeEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodAttributeValueChangeEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/paymentMethodStatusChangeEvent": {
            "post": {
                "operationId": "listenToPaymentMethodStatusChangeEvent",
                "summary": "Client listener for entity PaymentMethodStatusChangeEvent",
                "description": "Example of a client listener for receiving the notification PaymentMethodStatusChangeEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodStatusChangeEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/listener/paymentMethodDeleteEvent": {
            "post": {
                "operationId": "listenToPaymentMethodDeleteEvent",
                "summary": "Client listener for entity PaymentMethodDeleteEvent",
                "description": "Example of a client listener for receiving the notification PaymentMethodDeleteEvent",
                "tags": [
                    "notification listeners (client side)"
                ],
                "parameters": [
                    {
                        "name": "data",
                        "required": true,
                        "in": "body",
                        "description": "The event data",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodDeleteEvent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Notified",
                        "schema": {
                            "$ref": "#/definitions/EventSubscription"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "AccountRef": {
            "type": "object",
            "description": "Account reference. A account may be a party account or a financial account.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the account"
                },
                "href": {
                    "type": "string",
                    "description": "Reference of the account"
                },
                "description": {
                    "type": "string",
                    "description": "Detailed description of the account"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the account"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Addressable": {
            "type": "object",
            "description": "Base schema for adressable entities",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                }
            }
        },
        "Entity": {
            "type": "object",
            "description": "Base entity schema for use in TMForum Open-APIs",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "EntityRef": {
            "type": "object",
            "description": "Entity reference schema to be use for all entityRef class.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            },
            "required": [
                "id"
            ]
        },
        "Extensible": {
            "type": "object",
            "description": "Base Extensible schema for use in TMForum Open-APIs",
            "properties": {
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                }
            }
        },
        "PaymentMethod": {
            "description": "Defines a specific method of payment (e.g. direct debit with all details associated)",
            "type": "object",
            "required": [
                "@type",
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Friendly name assigned to the payment method"
                },
                "description": {
                    "type": "string",
                    "description": "Text description of the contents of the payment method"
                },
                "isPreferred": {
                    "type": "boolean",
                    "description": "If the method is the preferred one by the owner. Typically used when querying for the payment methods of a specific customer or account"
                },
                "authorizationCode": {
                    "type": "string",
                    "description": "Review: Authorization code provided by a financial institution. Typically this would be populated for recurring payments using the method, as payments have an authorization code of their own."
                },
                "status": {
                    "type": "string",
                    "description": "Status of the payment method"
                },
                "statusDate": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The last time the payment method status changed."
                },
                "statusReason": {
                    "type": "string",
                    "description": "The reason for the last status change."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "Date interval in which the payment method is valid"
                },
                "@type": {
                    "type": "string",
                    "enum": [
                        "cash",
                        "digitalWallet",
                        "tokenizedCard",
                        "bankAccountTransfer",
                        "bankAccountDebit",
                        "bankCard",
                        "voucher",
                        "check",
                        "bucketPaymentMethod",
                        "accountPaymentMethod",
                        "loyaltyPaymentMethod",
                        "directDebit"
                    ],
                    "description": "Type of payment method (e.g.: bank card, cash, voucher\u2026). The details field type depends on the value assigned to this one."
                },
                "relatedParty": {
                    "$ref": "#/definitions/RelatedParty",
                    "description": "Reference to the customer or party that owns that payment method or can use it."
                },
                "relatedPlace": {
                    "$ref": "#/definitions/RelatedPlace",
                    "description": "Reference to a place for billing or delivery address, if different to that of the related party."
                },
                "account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountRef"
                    },
                    "description": "Reference to the accounts that are linked to the payment method. May be a party account or a financial account."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Entity"
                }
            ]
        },
        "PaymentMethod_Create": {
            "type": "object",
            "description": "Defines a specific method of payment (e.g. direct debit with all details associated)\nSkipped properties: id,href",
            "required": [
                "@type",
                "name"
            ],
            "properties": {
                "authorizationCode": {
                    "example": "1234567890",
                    "type": "string",
                    "description": "Review: Authorization code provided by a financial institution. Typically this would be populated for recurring payments using the method, as payments have an authorization code of their own."
                },
                "description": {
                    "example": "My gold mastercard.",
                    "type": "string",
                    "description": "Text description of the contents of the payment method"
                },
                "isPreferred": {
                    "example": "True",
                    "type": "boolean",
                    "description": "If the method is the preferred one by the owner. Typically used when querying for the payment methods of a specific customer or account"
                },
                "name": {
                    "example": "Main credit card",
                    "type": "string",
                    "description": "Friendly name assigned to the payment method"
                },
                "status": {
                    "example": "Active",
                    "type": "string",
                    "description": "Status of the payment method"
                },
                "statusDate": {
                    "example": "2020-07-17T10:12:26+0000",
                    "type": "string",
                    "format": "date-time",
                    "description": "The last time the payment method status changed."
                },
                "statusReason": {
                    "example": "This payment method has expired, therefore its status is now inactive.",
                    "type": "string",
                    "description": "The reason for the last status change."
                },
                "account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountRef"
                    },
                    "description": "Reference to the accounts that are linked to the payment method. May be a party account or a financial account."
                },
                "relatedParty": {
                    "$ref": "#/definitions/RelatedParty",
                    "description": "Reference to the customer or party that owns that payment method or can use it."
                },
                "relatedPlace": {
                    "$ref": "#/definitions/RelatedPlace",
                    "description": "Reference to a place for billing or delivery address, if different to that of the related party."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "Date interval in which the payment method is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "Type of payment method (e.g.: bank card, cash, voucher, etc). The details field type depends on the value assigned to this one."
                }
            }
        },
        "PaymentMethod_Update": {
            "type": "object",
            "description": "Defines a specific method of payment (e.g. direct debit with all details associated)\nSkipped properties: id,href",
            "required": [
                "@type",
                "name"
            ],
            "properties": {
                "authorizationCode": {
                    "example": "1234567890",
                    "type": "string",
                    "description": "Review: Authorization code provided by a financial institution. Typically this would be populated for recurring payments using the method, as payments have an authorization code of their own."
                },
                "description": {
                    "example": "My gold mastercard.",
                    "type": "string",
                    "description": "Text description of the contents of the payment method"
                },
                "isPreferred": {
                    "example": "True",
                    "type": "boolean",
                    "description": "If the method is the preferred one by the owner. Typically used when querying for the payment methods of a specific customer or account"
                },
                "name": {
                    "example": "Main credit card",
                    "type": "string",
                    "description": "Friendly name assigned to the payment method"
                },
                "status": {
                    "example": "Active",
                    "type": "string",
                    "description": "Status of the payment method"
                },
                "statusDate": {
                    "example": "2020-07-17T10:12:26+0000",
                    "type": "string",
                    "format": "date-time",
                    "description": "The last time the payment method status changed."
                },
                "statusReason": {
                    "example": "This payment method has expired, therefore its status is now inactive.",
                    "type": "string",
                    "description": "The reason for the last status change."
                },
                "account": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AccountRef"
                    },
                    "description": "Reference to the accounts that are linked to the payment method. May be a party account or a financial account."
                },
                "relatedParty": {
                    "$ref": "#/definitions/RelatedParty",
                    "description": "Reference to the customer or party that owns that payment method or can use it."
                },
                "relatedPlace": {
                    "$ref": "#/definitions/RelatedPlace",
                    "description": "Reference to a place for billing or delivery address, if different to that of the related party."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "Date interval in which the payment method is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "Type of payment method (e.g.: bank card, cash, voucher, etc). The details field type depends on the value assigned to this one."
                }
            }
        },
        "RelatedParty": {
            "type": "object",
            "description": "Related Entity reference. A related party defines party or party role linked to a specific entity.",
            "required": [
                "@referredType",
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "unique identifier"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "Hyperlink reference"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the related entity."
                },
                "role": {
                    "type": "string",
                    "description": "Role played by the related party"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "RelatedPlace": {
            "type": "object",
            "description": "A  Place and an associated role as installation adress, delivery address, etc....",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier of the place"
                },
                "href": {
                    "type": "string",
                    "description": "Unique reference of the place"
                },
                "name": {
                    "type": "string",
                    "description": "A user-friendly name for the place, such as [Paris Store], [London Store], [Main Home]"
                },
                "role": {
                    "type": "string",
                    "description": "Role of the place, such as: [home delivery], [shop retrieval])"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "TimePeriod": {
            "type": "object",
            "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both",
            "properties": {
                "endDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "type": "string",
                    "format": "date-time",
                    "description": "End of the time period, using IETC-RFC-3339 format"
                },
                "startDateTime": {
                    "example": "1985-04-12T23:20:50.52Z",
                    "type": "string",
                    "format": "date-time",
                    "description": "Start of the time period, using IETC-RFC-3339 format"
                }
            }
        },
        "EventSubscription": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "id",
                "callback"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Id of the listener"
                },
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "EventSubscriptionInput": {
            "type": "object",
            "description": "Sets the communication endpoint address the service instance must use to deliver notification information",
            "required": [
                "callback"
            ],
            "properties": {
                "callback": {
                    "type": "string",
                    "description": "The callback being registered."
                },
                "query": {
                    "type": "string",
                    "description": "additional data to be passed"
                }
            }
        },
        "PaymentMethodCreateEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/PaymentMethodCreateEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "PaymentMethodCreateEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "paymentMethod": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/PaymentMethod"
                }
            }
        },
        "PaymentMethodAttributeValueChangeEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                },
                "fieldPath": {
                    "type": "string",
                    "description": "The path identifying the object field concerned by this notification."
                },
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/PaymentMethodAttributeValueChangeEventPayload"
                }
            }
        },
        "PaymentMethodAttributeValueChangeEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "paymentMethod": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/PaymentMethod"
                }
            }
        },
        "PaymentMethodStatusChangeEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/PaymentMethodStatusChangeEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "PaymentMethodStatusChangeEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "paymentMethod": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/PaymentMethod"
                }
            }
        },
        "PaymentMethodDeleteEvent": {
            "type": "object",
            "description": "The notification data structure",
            "properties": {
                "event": {
                    "description": "The event payload linked to the involved resource object",
                    "$ref": "#/definitions/PaymentMethodDeleteEventPayload"
                },
                "eventId": {
                    "type": "string",
                    "description": "The identifier of the notification."
                },
                "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event occurrence."
                },
                "eventType": {
                    "type": "string",
                    "description": "The type of the notification."
                },
                "correlationId": {
                    "type": "string",
                    "description": "The correlation id for this event."
                },
                "domain": {
                    "type": "string",
                    "description": "The domain of the event."
                },
                "title": {
                    "type": "string",
                    "description": "The title of the event."
                },
                "description": {
                    "type": "string",
                    "description": "An explnatory of the event."
                },
                "priority": {
                    "type": "string",
                    "description": "A priority."
                },
                "timeOcurred": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time the event occured."
                }
            }
        },
        "PaymentMethodDeleteEventPayload": {
            "type": "object",
            "description": "The event data structure",
            "properties": {
                "paymentMethod": {
                    "description": "The involved resource data for the event",
                    "$ref": "#/definitions/PaymentMethod"
                }
            }
        },
        "DirectDebit": {
            "description": "Direct Debit is a fully automated payment instrument which is generally used for recurrent payments. It allows a creditor to initiate the payment order. In doing so, it exempts the debtor from having to send a separate payment order at each due date",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "mandateId": {
                    "type": "string",
                    "description": "Unique mandate reference"
                },
                "mandateStatus": {
                    "type": "string",
                    "description": "The status of the mandate(Active/Inactive/Pending)"
                },
                "mandateType": {
                    "type": "string",
                    "description": "The type of mandate e.g., single-use(single)/multi-use(recurring)"
                },
                "mandateCategory": {
                    "type": "string",
                    "description": "The identification code of the Scheme e.g., core/b2b"
                },
                "signature": {
                    "type": "string",
                    "description": "The (e)Mandate electronic signature data"
                },
                "signatureDate": {
                    "type": "string",
                    "description": "The date of signing of the (e)Mandate",
                    "format": "date-time"
                },
                "mandateStatusDate": {
                    "type": "string",
                    "description": "The date of the mandate status change",
                    "format": "date-time"
                },
                "firstDebitDate": {
                    "type": "string",
                    "description": "The first debit date. The debit date of the collection is the day when the payment of the Debtor is due to the Creditor",
                    "format": "date-time"
                },
                "lastDebitDate": {
                    "type": "string",
                    "description": "The last debit date. The debit date of the collection is the day when the payment of the Debtor is due to the Creditor",
                    "format": "date-time"
                },
                "cancellationDate": {
                    "type": "string",
                    "description": "The date on which the (e)Mandate has been cancelled by the Debtor or the Creditor.",
                    "format": "date-time"
                },
                "accountNumber": {
                    "type": "string",
                    "description": "The bank account number, this could refer to the iban or swift number."
                },
                "accountNumberType": {
                    "type": "string",
                    "description": "The type of account number (e.g.: IBAN, SWIFT, ...)"
                },
                "reference": {
                    "type": "string",
                    "description": "A reference that the party can later use to identify the direct debit."
                },
                "BIC": {
                    "type": "string",
                    "description": "The Business Identifier Code/Swift code of the financial institution where the account is located."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the bank account. This is also the account name."
                },
                "bank": {
                    "type": "string",
                    "description": "The display name of the bank."
                },
                "attachment": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AttachmentRefOrValue"
                    }
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "AttachmentRefOrValue": {
            "type": "object",
            "description": "An attachment by value or by reference. An attachment complements the description of an element, for example through a document, a video, a picture.",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Unique identifier for this particular attachment"
                },
                "href": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI for this Attachment"
                },
                "attachmentType": {
                    "type": "string",
                    "description": "Attachment type such as video, picture"
                },
                "content": {
                    "type": "string",
                    "format": "base64",
                    "description": "The actual contents of the attachment object, if embedded, encoded as base64"
                },
                "description": {
                    "type": "string",
                    "description": "A narrative text describing the content of the attachment"
                },
                "mimeType": {
                    "type": "string",
                    "description": "Attachment mime type such as extension file for video, picture and document"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the attachment"
                },
                "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
                },
                "size": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The size of the attachment."
                },
                "validFor": {
                    "$ref": "#/definitions/TimePeriod",
                    "description": "The period of time for which the attachment is valid"
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class"
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class Extensible name"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The actual type of the target instance when needed for disambiguation."
                }
            }
        },
        "Voucher": {
            "description": "A voucher method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Code that identifies the voucher."
                },
                "description": {
                    "type": "string",
                    "description": "Description of the voucher i.e.: get one and receive one free."
                },
                "value": {
                    "$ref": "#/definitions/Quantity",
                    "description": "The value of the voucher."
                },
                "discount": {
                    "type": "string",
                    "description": "The discount that the voucher applies when it's a discount voucher."
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The voucher's expiration date.",
                    "format": "date-time"
                },
                "campaign": {
                    "type": "string",
                    "description": "Campaign this voucher belongs to."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "TokenizedCard": {
            "description": "A Tokenized Card method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "Card brand. Might be used for display purposes"
                },
                "cardType": {
                    "type": "string",
                    "description": "Card type. Might be used for display purposes."
                },
                "lastFourDigits": {
                    "type": "string",
                    "description": "The last four digits of the credit card."
                },
                "tokenType": {
                    "type": "string",
                    "description": "Token type (e.g.: emv)."
                },
                "token": {
                    "type": "string",
                    "description": "The token. A series of randomly generated numbers."
                },
                "issuer": {
                    "type": "string",
                    "description": "The entity that issued the token."
                },
                "expirationDate": {
                    "type": "string",
                    "description": "The tokenised card's expiration date.",
                    "format": "date-time"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "DigitalWallet": {
            "description": "A digital wallet method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "service": {
                    "type": "string",
                    "description": "Organization, platform or currency backing the wallet (e.g.: PayPal, Yandex, BitCoin\u2026)."
                },
                "walletId": {
                    "type": "string",
                    "description": "Account identifier in that service."
                },
                "walletUrl": {
                    "type": "string",
                    "description": "URI pointing at the digital wallet (e.g.: //paypal.me/johndoe)."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "Check": {
            "description": "A check method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "checkId": {
                    "type": "string",
                    "description": "Unique identifier of the check."
                },
                "drawer": {
                    "type": "string",
                    "description": "Person or entity writing the check."
                },
                "payee": {
                    "type": "string",
                    "description": "Person or entity the check is addressed to."
                },
                "signedDate": {
                    "type": "string",
                    "description": "Date when the check was signed.",
                    "format": "date-time"
                },
                "bank": {
                    "type": "string",
                    "description": "Bank performing the payment of the check."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "Cash": {
            "description": "A cash method of payment. It has no additional data, but it could be extended to add information e.g.: the cashier who took the payment, the person who paid, etc",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {},
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "BankCard": {
            "description": "A bank card method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "brand": {
                    "type": "string",
                    "description": "The card brand"
                },
                "cardType": {
                    "type": "string",
                    "description": "The type of card e.g. Credit, debit etc."
                },
                "cardNumber": {
                    "type": "string",
                    "description": "The bank card number."
                },
                "expirationDate": {
                    "type": "string",
                    "description": "Expiration date of the bank card.",
                    "format": "date-time"
                },
                "cvv": {
                    "type": "string",
                    "description": "The security code (e.g.: CVV, CVV2) of the card."
                },
                "lastFourDigits": {
                    "type": "string",
                    "description": "The last four digits of the credit card."
                },
                "nameOnCard": {
                    "type": "string",
                    "description": "The name on the card."
                },
                "bank": {
                    "type": "string",
                    "description": "The bank that issued the card."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "BankAccountTransfer": {
            "description": "A bank transfer method of payment.",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The bank account number, this could refer to the iban or swift number."
                },
                "accountNumberType": {
                    "type": "string",
                    "description": "The type of account number (e.g.: IBAN, SWIFT, ...)"
                },
                "BIC": {
                    "type": "string",
                    "description": "The Business Identifier Code/Swift code of the financial institution where the account is located."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the bank account. This is also the account name."
                },
                "bank": {
                    "type": "string",
                    "description": "The display name of the bank."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "BankAccountDebit": {
            "description": "A bank account debit method of payment. This could be extended to add any required authorization fields to allow recurring payments",
            "type": "object",
            "required": [
                "@type"
            ],
            "properties": {
                "accountNumber": {
                    "type": "string",
                    "description": "The Bank Account Number (this could refer to the IBAN or SWIFT number)"
                },
                "accountNumberType": {
                    "type": "string",
                    "description": "The type of account number (e.g.: IBAN, SWIFT, ...)"
                },
                "BIC": {
                    "type": "string",
                    "description": "The Business Identifier Code/Swift code of the financial institution where the account is located."
                },
                "owner": {
                    "type": "string",
                    "description": "The owner of the bank account. This is also the account name."
                },
                "bank": {
                    "type": "string",
                    "description": "The display name of the bank."
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/PaymentMethod"
                }
            ]
        },
        "Quantity": {
            "type": "object",
            "description": "An amount in a given unit",
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "float",
                    "default": 1,
                    "description": "Numeric value in a given unit"
                },
                "units": {
                    "type": "string",
                    "description": "Unit"
                }
            }
        },
        "Error": {
            "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)",
            "type": "object",
            "required": [
                "code",
                "reason"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "description": "Application relevant detail, defined in the API or a common list."
                },
                "reason": {
                    "type": "string",
                    "description": "Explanation of the reason for the error which can be shown to a client user."
                },
                "message": {
                    "type": "string",
                    "description": "More details and corrective actions related to the error which can be shown to a client user."
                },
                "status": {
                    "type": "string",
                    "description": "HTTP Error code extension"
                },
                "referenceError": {
                    "type": "string",
                    "format": "uri",
                    "description": "URI of documentation describing the error."
                },
                "@baseType": {
                    "type": "string",
                    "description": "When sub-classing, this defines the super-class."
                },
                "@schemaLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "When sub-classing, this defines the sub-class entity name."
                }
            }
        }
    }
}
